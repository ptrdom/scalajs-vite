# npm

$ absent vite/package-lock.json
> clean
> set scalaJSStage := org.scalajs.sbtplugin.Stage.FastOpt
> run
$ exists vite/package-lock.json

$ delete vite/package-lock.json
> clean
> set scalaJSStage := org.scalajs.sbtplugin.Stage.FullOpt
> run
$ exists vite/package-lock.json

$ delete vite/package-lock.json
> clean
> set scalaJSStage := org.scalajs.sbtplugin.Stage.FastOpt
> test
$ exists vite/package-lock.json

$ delete vite/package-lock.json
> clean
> set scalaJSStage := org.scalajs.sbtplugin.Stage.FullOpt
> test
$ exists vite/package-lock.json

$ delete vite/package-lock.json
> clean
> fastLinkJS/startVite
> html 5173
> fastLinkJS/stopVite
$ exists vite/package-lock.json

$ delete vite/package-lock.json
> clean
> fullLinkJS/startVite
> html 5173
> fullLinkJS/stopVite
$ exists vite/package-lock.json

$ delete vite/package-lock.json
> clean
> fastLinkJS/startVitePreview
> html 4173
> fastLinkJS/stopVitePreview
$ exists vite/package-lock.json

$ delete vite/package-lock.json
> clean
> fullLinkJS/startVitePreview
> html 4173
> fullLinkJS/stopVitePreview
$ exists vite/package-lock.json

$ delete vite/package-lock.json

# pnpm

$ absent vite/package-lock.json
> set vitePackageManager := new scalajsvite.PackageManager { override def name = "pnpm"; override def lockFile = "pnpm-lock.yaml"; override def installCommand = "install";  }
> clean
> set scalaJSStage := org.scalajs.sbtplugin.Stage.FastOpt
> run
$ exists vite/pnpm-lock.yaml

$ delete vite/package-lock.json
> set vitePackageManager := new scalajsvite.PackageManager { override def name = "pnpm"; override def lockFile = "pnpm-lock.yaml"; override def installCommand = "install";  }
> clean
> set scalaJSStage := org.scalajs.sbtplugin.Stage.FullOpt
> run
$ exists vite/pnpm-lock.yaml

$ delete vite/package-lock.json
> set vitePackageManager := new scalajsvite.PackageManager { override def name = "pnpm"; override def lockFile = "pnpm-lock.yaml"; override def installCommand = "install";  }
> clean
> set scalaJSStage := org.scalajs.sbtplugin.Stage.FastOpt
> test
$ exists vite/pnpm-lock.yaml

$ delete vite/package-lock.json
> set vitePackageManager := new scalajsvite.PackageManager { override def name = "pnpm"; override def lockFile = "pnpm-lock.yaml"; override def installCommand = "install";  }
> clean
> set scalaJSStage := org.scalajs.sbtplugin.Stage.FullOpt
> test
$ exists vite/pnpm-lock.yaml

$ delete vite/pnpm-lock.yaml
> set vitePackageManager := new scalajsvite.PackageManager { override def name = "pnpm"; override def lockFile = "pnpm-lock.yaml"; override def installCommand = "install";  }
> clean
> fastLinkJS/startVite
> html 5173
> fastLinkJS/stopVite
$ exists vite/pnpm-lock.yaml

$ delete vite/pnpm-lock.yaml
> set vitePackageManager := new scalajsvite.PackageManager { override def name = "pnpm"; override def lockFile = "pnpm-lock.yaml"; override def installCommand = "install";  }
> clean
> fullLinkJS/startVite
> html 5173
> fullLinkJS/stopVite
$ exists vite/pnpm-lock.yaml

$ delete vite/pnpm-lock.yaml
> set vitePackageManager := new scalajsvite.PackageManager { override def name = "pnpm"; override def lockFile = "pnpm-lock.yaml"; override def installCommand = "install";  }
> clean
> fastLinkJS/startVitePreview
> html 4173
> fastLinkJS/stopVitePreview
$ exists vite/pnpm-lock.yaml

$ delete vite/pnpm-lock.yaml
> set vitePackageManager := new scalajsvite.PackageManager { override def name = "pnpm"; override def lockFile = "pnpm-lock.yaml"; override def installCommand = "install";  }
> clean
> fullLinkJS/startVitePreview
> html 4173
> fullLinkJS/stopVitePreview
$ exists vite/pnpm-lock.yaml

$ delete vite/pnpm-lock.yaml

# yarn

$ absent vite/package-lock.json
> set vitePackageManager := new scalajsvite.PackageManager { override def name = "yarn"; override def lockFile = "yarn.lock"; override def installCommand = "install";  }
> clean
> set scalaJSStage := org.scalajs.sbtplugin.Stage.FastOpt
> run
$ exists vite/yarn.lock

$ delete vite/package-lock.json
> set vitePackageManager := new scalajsvite.PackageManager { override def name = "yarn"; override def lockFile = "yarn.lock"; override def installCommand = "install";  }
> clean
> set scalaJSStage := org.scalajs.sbtplugin.Stage.FullOpt
> run
$ exists vite/yarn.lock

$ delete vite/package-lock.json
> set vitePackageManager := new scalajsvite.PackageManager { override def name = "yarn"; override def lockFile = "yarn.lock"; override def installCommand = "install";  }
> clean
> set scalaJSStage := org.scalajs.sbtplugin.Stage.FastOpt
> test
$ exists vite/yarn.lock

$ delete vite/package-lock.json
> set vitePackageManager := new scalajsvite.PackageManager { override def name = "yarn"; override def lockFile = "yarn.lock"; override def installCommand = "install";  }
> clean
> set scalaJSStage := org.scalajs.sbtplugin.Stage.FullOpt
> test
$ exists vite/yarn.lock

$ delete vite/yarn.lock
> set vitePackageManager := new scalajsvite.PackageManager { override def name = "yarn"; override def lockFile = "yarn.lock"; override def installCommand = "install";  }
> clean
> fastLinkJS/startVite
> html 5173
> fastLinkJS/stopVite
$ exists vite/yarn.lock

$ delete vite/yarn.lock
> set vitePackageManager := new scalajsvite.PackageManager { override def name = "yarn"; override def lockFile = "yarn.lock"; override def installCommand = "install";  }
> clean
> fullLinkJS/startVite
> html 5173
> fullLinkJS/stopVite
$ exists vite/yarn.lock

$ delete vite/yarn.lock
> set vitePackageManager := new scalajsvite.PackageManager { override def name = "yarn"; override def lockFile = "yarn.lock"; override def installCommand = "install";  }
> clean
> fastLinkJS/startVitePreview
> html 4173
> fastLinkJS/stopVitePreview
$ exists vite/yarn.lock

$ delete vite/yarn.lock
> set vitePackageManager := new scalajsvite.PackageManager { override def name = "yarn"; override def lockFile = "yarn.lock"; override def installCommand = "install";  }
> clean
> fullLinkJS/startVitePreview
> html 4173
> fullLinkJS/stopVitePreview
$ exists vite/yarn.lock
